// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: microphantom.proto

package com.microphantom.protos;

public interface GameStateBufferOrBuilder extends
    // @@protoc_insertion_point(interface_extends:GameStateBuffer)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int32 time = 1;</code>
   * @return The time.
   */
  int getTime();

  /**
   * <code>int32 nb_barracks = 2;</code>
   * @return The nbBarracks.
   */
  int getNbBarracks();

  /**
   * <code>int32 min_distance_resource_base = 3;</code>
   * @return The minDistanceResourceBase.
   */
  int getMinDistanceResourceBase();

  /**
   * <code>int32 max_distance_resource_base = 4;</code>
   * @return The maxDistanceResourceBase.
   */
  int getMaxDistanceResourceBase();

  /**
   * <code>int32 no_initial_base = 5;</code>
   * @return The noInitialBase.
   */
  int getNoInitialBase();

  /**
   * <code>int32 no_initial_barracks = 6;</code>
   * @return The noInitialBarracks.
   */
  int getNoInitialBarracks();

  /**
   * <code>int32 resources = 7;</code>
   * @return The resources.
   */
  int getResources();

  /**
   * <code>int32 initial_resources = 8;</code>
   * @return The initialResources.
   */
  int getInitialResources();

  /**
   * <code>int32 enemy_resources_loss = 9;</code>
   * @return The enemyResourcesLoss.
   */
  int getEnemyResourcesLoss();

  /**
   * <code>int32 worker_move_time = 10;</code>
   * @return The workerMoveTime.
   */
  int getWorkerMoveTime();

  /**
   * <code>int32 worker_harvest_time = 11;</code>
   * @return The workerHarvestTime.
   */
  int getWorkerHarvestTime();

  /**
   * <code>int32 worker_return_time = 12;</code>
   * @return The workerReturnTime.
   */
  int getWorkerReturnTime();

  /**
   * <code>int32 harvest_amount = 13;</code>
   * @return The harvestAmount.
   */
  int getHarvestAmount();

  /**
   * <code>int32 base_cost = 14;</code>
   * @return The baseCost.
   */
  int getBaseCost();

  /**
   * <code>int32 barracks_cost = 15;</code>
   * @return The barracksCost.
   */
  int getBarracksCost();

  /**
   * <code>int32 heavy_cost = 16;</code>
   * @return The heavyCost.
   */
  int getHeavyCost();

  /**
   * <code>int32 light_cost = 17;</code>
   * @return The lightCost.
   */
  int getLightCost();

  /**
   * <code>int32 ranged_cost = 18;</code>
   * @return The rangedCost.
   */
  int getRangedCost();

  /**
   * <code>int32 my_heavy_units = 19;</code>
   * @return The myHeavyUnits.
   */
  int getMyHeavyUnits();

  /**
   * <code>int32 my_light_units = 20;</code>
   * @return The myLightUnits.
   */
  int getMyLightUnits();

  /**
   * <code>int32 my_ranged_units = 21;</code>
   * @return The myRangedUnits.
   */
  int getMyRangedUnits();

  /**
   * <code>int32 initial_enemy_worker = 22;</code>
   * @return The initialEnemyWorker.
   */
  int getInitialEnemyWorker();

  /**
   * <code>int32 observed_enemy_worker = 23;</code>
   * @return The observedEnemyWorker.
   */
  int getObservedEnemyWorker();

  /**
   * <code>int32 observed_enemy_heavy = 24;</code>
   * @return The observedEnemyHeavy.
   */
  int getObservedEnemyHeavy();

  /**
   * <code>int32 observed_enemy_light = 25;</code>
   * @return The observedEnemyLight.
   */
  int getObservedEnemyLight();

  /**
   * <code>int32 observed_enemy_ranged = 26;</code>
   * @return The observedEnemyRanged.
   */
  int getObservedEnemyRanged();

  /**
   * <code>int32 observed_enemy_worker_in_total = 27;</code>
   * @return The observedEnemyWorkerInTotal.
   */
  int getObservedEnemyWorkerInTotal();

  /**
   * <code>int32 observed_enemy_heavy_in_total = 28;</code>
   * @return The observedEnemyHeavyInTotal.
   */
  int getObservedEnemyHeavyInTotal();

  /**
   * <code>int32 observed_enemy_light_in_total = 29;</code>
   * @return The observedEnemyLightInTotal.
   */
  int getObservedEnemyLightInTotal();

  /**
   * <code>int32 observed_enemy_ranged_in_total = 30;</code>
   * @return The observedEnemyRangedInTotal.
   */
  int getObservedEnemyRangedInTotal();

  /**
   * <code>int32 solver_type = 31;</code>
   * @return The solverType.
   */
  int getSolverType();

  /**
   * <code>int32 nb_samples = 32;</code>
   * @return The nbSamples.
   */
  int getNbSamples();
}
